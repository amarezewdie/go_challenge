// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/person": {
            "get": {
                "description": "Retrieves a list of persons with optional pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get all persons",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/person/create": {
            "post": {
                "description": "This endpoint creates a new person entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Create a new person",
                "parameters": [
                    {
                        "description": "Person Data",
                        "name": "dto.PersonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/person/{personId}": {
            "get": {
                "description": "This endpoint retrieves a single person entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get Single person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "personId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "This endpoint updates a person's details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Update a person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "personId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Person Data",
                        "name": "dto.PersonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint deletes a person entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Delete person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "personId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted person",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonRequest": {
            "type": "object",
            "required": [
                "age",
                "hobbies",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 0
                },
                "hobbies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_izymalhaw_go-crud_yishakterefe_internal_api_dto.PersonResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "hobbies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
